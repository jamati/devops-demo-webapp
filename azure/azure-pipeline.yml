
trigger:
- master

resources:
- repo: self

variables:

  ACR.Name: 'mtcsp'
  ACR.ImageName: '$(ACR.Name):$(Build.BuildId)'
  ACR.FullName: '$(ACR.Name).azurecr.io'
  WebApp.Name: 'mtcspoffers'
  ServicePlan.Name: 'ASP-JamatiOfertas-bc66'
  Azure.ServiceConnectionId: 'azurerm-service'
  

jobs:

- job: BuildImage
  displayName: Build
  
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
      azureContainerRegistry: '$(ACR.FullName)'
      imageName: '$(ACR.ImageName)'
      command: build
      dockerFile: '**/dockerfile'

  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: '$(Azure.ServiceConnectionId)'
      azureContainerRegistry: '$(ACR.FullName)'
      imageName: '$(ACR.ImageName)'
      command: build
      dockerFile: '**/dockerfile'

  
- job: DeployApp
  displayName: Deploy
  dependsOn: BuildImage
  condition: succeeded()

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: AzureWebAppContainer@1
    displayName: 'Azure Web App on Container Deploy: $(WebApp.Name)'
    inputs:
      azureSubscription: '$(Azure.ServiceConnectionId)'
      appName: $(WebApp.Name)
      imageName: '$(ACR.FullName)/$(ACR.ImageName)'